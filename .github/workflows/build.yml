      - name: Fallback build with cl/rc (compile all sources)
        if: always()
        shell: pwsh
        run: |
          # If MSBuild already produced an .exe, use it
          $exe = Get-ChildItem -Recurse -Filter *.exe -ErrorAction SilentlyContinue |
                 Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if ($exe) {
            Write-Host "MSBuild produced: $($exe.FullName) – skipping fallback."
            "OUT_EXE=$($exe.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append
            exit 0
          }

          Write-Host "No EXE found; running fallback cl/rc compile…"

          # For debugging
          Get-ChildItem -Recurse -File | Out-String -Width 4096 | Out-File tree.txt

          # Compile the resource script (correct path in your repo)
          rc /nologo /I Matrix\resource /fo Matrix\resource\Matrix.res Matrix\resource\Matrix.rc 2>&1 | Tee-Object -FilePath rc.log
          if (!(Test-Path Matrix\resource\Matrix.res)) { throw "Resource compile failed (see rc.log)" }

          # Collect every .cpp file under Matrix\ (pass as an array to cl)
          $cpps = Get-ChildItem Matrix -Recurse -Filter *.cpp | Select-Object -ExpandProperty FullName
          if (-not $cpps -or $cpps.Count -eq 0) { throw "No .cpp files found under Matrix\" }
          Write-Host ("Compiling {0} source files…" -f $cpps.Count)

          # Invoke cl directly (no cmd /c; pass the array so cl sees each file)
          cl /nologo /O2 /W3 /DUNICODE /D_UNICODE `
             /I Matrix /I Matrix\resource `
             $cpps Matrix\resource\Matrix.res `
             user32.lib gdi32.lib comctl32.lib shell32.lib comdlg32.lib advapi32.lib ole32.lib oleaut32.lib uuid.lib `
             /link /SUBSYSTEM:WINDOWS /OUT:matrix-win32.exe | Tee-Object -FilePath cl.log

          if (!(Test-Path matrix-win32.exe)) { throw "Fallback build failed (see cl.log)" }

          "OUT_EXE=$((Resolve-Path matrix-win32.exe).Path)" | Out-File -FilePath $env:GITHUB_ENV -Append
